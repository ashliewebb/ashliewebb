<?php  return array (
  'markdowneditor' => 'MarkdownEditor',
  'setting_markdowneditor' => 'MarkdownEditor',
  'markdowneditor.status_bar_message' => '<label for="[[+id]]" class="link">Select files</label> or drag & drop to upload. ',
  'markdowneditor.status_bar_message_mobile' => '<label for="[[+id]]" class="link">Select files</label>, <label for="[[+id_mobile]]" class="link">take a picture</label> or drag & drop to upload.',
  'markdowneditor.status_bar_disabled' => 'Uploading files is disabled.',
  'markdowneditor.uploading_image' => 'Uploading image: ',
  'markdowneditor.uploading_file' => 'Uploading file: ',
  'markdowneditor.cropper.crop_image' => 'Crop the image',
  'markdowneditor.cropper.move' => 'Move',
  'markdowneditor.cropper.crop' => 'Crop',
  'markdowneditor.cropper.zoom_in' => 'Zoom In',
  'markdowneditor.cropper.zoom_out' => 'Zoom Out',
  'markdowneditor.cropper.rotate_left' => 'Rotate left',
  'markdowneditor.cropper.rotate_right' => 'Rotate right',
  'markdowneditor.cropper.clear_cropper' => 'Clear cropper',
  'markdowneditor.cropper.upload' => 'Upload',
  'markdowneditor.cropper.crop_upload' => 'Crop & Upload',
  'markdowneditor.toolbox.preview' => 'Preview',
  'markdowneditor.toolbox.fullscree' => 'Toggle Full screen',
  'markdowneditor.toolbox.split_screen' => 'Toggle Split screen',
  'markdowneditor.toolbox.hide_preview' => 'Close preview',
  'markdowneditor.toolbox.toolbox' => 'Toggle Tool box',
  'markdowneditor.toolbox.media_browser' => 'Browse media',
  'markdowneditor.toolbox.media_upload' => 'Upload media',
  'markdowneditor.toolbox.oembed' => 'Embed URL',
  'markdowneditor.toolbox.camera_upload' => 'Take a picture',
  'markdowneditor.oembed.embed_url' => 'Embed URL',
  'markdowneditor.oembed.url' => 'URL',
  'markdowneditor.oembed.read_more' => 'Read more',
  'markdowneditor.oembed.show_details' => 'Show detailsâ€¦',
  'markdowneditor.oembed.hide_details' => 'Hide details',
  'area_markdowneditor.area.cropper' => 'Cropper',
  'area_markdowneditor.area.lp' => 'Live preview',
  'area_markdowneditor.area.upload' => 'Upload',
  'area_markdowneditor.area.resizer' => 'Resizer',
  'area_markdowneditor.area.general' => 'General',
  'area_markdowneditor.area.oembed' => 'oEmbed',
  'area_markdowneditor.area.embedly' => 'Embedly',
  'area_markdowneditor.area.init' => 'Init',
  'setting_markdowneditor.lp.parse_modx_tags' => 'Parse MODX Tags',
  'setting_markdowneditor.lp.parse_modx_tags_desc' => 'If set to yes, Markdown Editor will also parse MODX tags in preview. This option will send an Ajax request to the server each time you update content.',
  'setting_markdowneditor.lp.parse_modx_tags_timeout' => 'Parse MODX Tags timeout',
  'setting_markdowneditor.lp.parse_modx_tags_timeout_desc' => 'Delay parsing by the specified timeout in milliseconds.',
  'setting_markdowneditor.upload.image_upload_path' => 'Image upload path',
  'setting_markdowneditor.upload.image_upload_path_desc' => 'Path where to upload images.',
  'setting_markdowneditor.upload.image_upload_url' => 'Image upload URL',
  'setting_markdowneditor.upload.image_upload_url_desc' => 'URL to the image upload directory.',
  'setting_markdowneditor.upload.file_upload_path' => 'File upload path',
  'setting_markdowneditor.upload.file_upload_path_desc' => 'Path where to upload files.',
  'setting_markdowneditor.upload.file_upload_url' => 'File upload URL',
  'setting_markdowneditor.upload.file_upload_url_desc' => 'URL to the file upload directory.',
  'setting_markdowneditor.cropper.enable_cropper' => 'Enable Cropper',
  'setting_markdowneditor.cropper.enable_cropper_desc' => 'When enabled, a pop-up window with Cropper will show before each image upload.',
  'setting_markdowneditor.resizer.aspect_ratio_constraint' => 'Aspect ratio constraint',
  'setting_markdowneditor.resizer.aspect_ratio_constraint_desc' => 'When enabled, the image will keep their aspect ratio when resizing.',
  'setting_markdowneditor.resizer.upsize_constraint' => 'Upsize constraint',
  'setting_markdowneditor.resizer.upsize_constraint_desc' => 'When enabled, the image will not be resized to a larger height or width.',
  'setting_markdowneditor.resizer.width' => 'Width',
  'setting_markdowneditor.resizer.width_desc' => 'Width of a resized image.',
  'setting_markdowneditor.resizer.height' => 'Height',
  'setting_markdowneditor.resizer.height_desc' => 'Height of a resized image.',
  'setting_markdowneditor.general.theme' => 'Editor\'s theme',
  'setting_markdowneditor.general.theme_desc' => 'Type the name of available themes from the <a href="https://github.com/ajaxorg/ace/tree/master/lib/ace/theme">Ace editor project</a>.',
  'setting_markdowneditor.upload.under_resource' => 'Under resource',
  'setting_markdowneditor.upload.under_resource_desc' => 'When enabled, all uploaded files will be stored under directory with name of resource ID.',
  'setting_markdowneditor.upload.delete_unused' => 'Delete unused',
  'setting_markdowneditor.upload.delete_unused_desc' => 'When enabled, unused images and files will be deleted from the upload directory. <strong>Under resource</strong> setting has to be enabled.',
  'setting_markdowneditor.general.include_ghfmd' => 'GFM CSS',
  'setting_markdowneditor.general.include_ghfmd_desc' => 'When enabled, GitHub Flavoured Markdown CSS will be automatically included on the frontend.<br />Styles will be applied only to element with class <strong>markdown-body</strong>.',
  'setting_markdowneditor.general.include_highlight' => 'Highlight.js',
  'setting_markdowneditor.general.include_highlight_desc' => 'When enabled, highlight.js will be automatically included on the frontend.',
  'setting_markdowneditor.upload.enable_image_upload' => 'Image upload',
  'setting_markdowneditor.upload.enable_image_upload_desc' => 'When enabled, users will be able to upload images.',
  'setting_markdowneditor.upload.enable_file_upload' => 'File upload',
  'setting_markdowneditor.upload.enable_file_upload_desc' => 'When enabled, users will be able to upload non-image files.',
  'setting_markdowneditor.upload.image_types' => 'Image types',
  'setting_markdowneditor.upload.image_types_desc' => 'Define image types that can be upload.',
  'setting_markdowneditor.upload.file_types' => 'File types',
  'setting_markdowneditor.upload.file_types_desc' => 'Define files types that can be uploaded.',
  'setting_markdowneditor.upload.max_size' => 'Max size',
  'setting_markdowneditor.upload.max_size_desc' => 'Max allowed size in bits of a file or image.',
  'setting_markdowneditor.general.include_ghfmd_manager' => 'GFM CSS in Manager',
  'setting_markdowneditor.general.include_ghfmd_manager_desc' => 'When enabled, GitHub Flavoured Markdown CSS will be automatically included in the Manager, when creating/updating Resources.',
  'setting_markdowneditor.general.custom_css_manager' => 'Custom CSS in Manager',
  'setting_markdowneditor.general.custom_css_manager_desc' => 'If set, specified CSS file will be automatically included in Manager, when creating/updating Resources. All definition must be prefixed with class <strong>preview-md</strong> to be applied on preview panel.',
  'setting_markdowneditor.general.font_size' => 'Font size',
  'setting_markdowneditor.general.font_size_desc' => 'Font size for Markdown editor. (default: 12).',
  'setting_markdowneditor.general.font_family' => 'Font family',
  'setting_markdowneditor.general.font_family_desc' => 'Font family which will be used for editor.',
  'setting_markdowneditor.general.split' => 'Split editor',
  'setting_markdowneditor.general.split_desc' => 'When enabled, editor will be in split mode by default.',
  'setting_markdowneditor.general.split_fullscreen' => 'Split editor full screen',
  'setting_markdowneditor.general.split_fullscreen_desc' => 'When enabled, editor will be in split mode by default when entering full screen.',
  'setting_markdowneditor.cropper.profiles' => 'Profiles',
  'setting_markdowneditor.cropper.profiles_desc' => 'A list of profiles that users can select from in the Cropper window.<br /> Each profile is a JSON object with required <strong>name</strong> property. <code>{"name": "Profile name", "width": 100, "height": 100, "ratio": "1/1"}</code>',
  'setting_markdowneditor.cropper.show_description' => 'Profiles description',
  'setting_markdowneditor.cropper.show_description_desc' => 'When enabled, profiles select box will also contains profile\'s description.',
  'setting_markdowneditor.oembed.frontend_css' => 'Include services CSS',
  'setting_markdowneditor.oembed.frontend_css_desc' => 'If enabled, CSS from specified service will be automatically included on frontend.',
  'setting_markdowneditor.oembed.max_width' => 'Max width',
  'setting_markdowneditor.oembed.max_width_desc' => 'Max width of received element.',
  'setting_markdowneditor.oembed.max_height' => 'Max height',
  'setting_markdowneditor.oembed.max_height_desc' => 'Max height of received element.',
  'setting_markdowneditor.oembed.service' => 'oEmbed service',
  'setting_markdowneditor.oembed.service_desc' => 'Comma delimited list of oEmbed services. Other defined services will be used as a fallback. Available services: Essence, Noembed, EmbedlyExtract, EmbedlyEmbed, EmbedlyCards',
  'setting_markdowneditor.oembed.default_card_color' => 'Default card\'s color',
  'setting_markdowneditor.oembed.default_card_color_desc' => 'Default color of card\'s stripe.',
  'setting_markdowneditor.oembed.auto_card_color' => 'Auto card\'s color',
  'setting_markdowneditor.oembed.auto_card_color_desc' => 'If enabled and selected service supports auto color, color of the stripe will be generated from favicon of the embedding url.',
  'setting_markdowneditor.embedly.api_key' => 'API key',
  'setting_markdowneditor.embedly.api_key_desc' => 'Embedly API key, required for EmbedlyExtract and EmbedlyEmbed service.',
  'setting_markdowneditor.general.source' => 'Source',
  'setting_markdowneditor.general.source_desc' => 'Media source that will be used in media browser for inserting files and images.',
  'setting_markdowneditor.general.source_select' => 'Source select',
  'setting_markdowneditor.general.source_select_desc' => 'If enabled, user will be able to change source when inserting files or images.',
  'setting_markdowneditor.init.condition' => 'Condition',
  'setting_markdowneditor.init.condition_desc' => 'This condition will be used to init Markdown editor. Use JSON syntax.',
  'markdowneditor.err.upload.too_big' => 'File exceeded the size limit.',
  'markdowneditor.err.upload.unsupported_image' => 'Unsupported image type.',
  'markdowneditor.err.upload.unsupported_file' => 'Unsupported file type.',
);